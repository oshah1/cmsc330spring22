diff -r -b -B -u ../core_kernel-113.24.00.orig/config/detect.sh ./config/detect.sh
--- ./config/detect.sh
+++ ./config/detect.sh
@@ -4,7 +4,7 @@
 
 set -e
 
-if ld -lm -shared --wrap caml_modify -o /dev/null 2>/dev/null; then
+if "$LD" -lm -shared --wrap caml_modify -o /dev/null 2>/dev/null; then
     ld_wrap_possible=true
 else
     ld_wrap_possible=false
diff -r -b -B -u ../core_kernel-113.24.00.orig/config/discover.sh ./config/discover.sh
--- ./config/discover.sh
+++ ./config/discover.sh
@@ -7,7 +7,7 @@
     exit 2
 fi
 
-OCAMLC="$1"
+OCAMLC="$(cygpath -m "$1")"
 ML_OUTFILE="$2"
 C_OUTFILE="$3"
 shift 3
@@ -20,7 +20,7 @@
 OUT=config/test.out
 trap "rm -f $OUT" EXIT
 
-$OCAMLC -ccopt -E $OCAML_CFLAGS -c $SRC | grep '^"OUT:[^"]*"$' | sed 's/"OUT:\([^"]*\)"/\1/' | tee > $OUT
+"$OCAMLC" -ccopt -E $OCAML_CFLAGS -c $SRC | grep '^"OUT:[^"]*"$' | sed 's/"OUT:\([^"]*\)"/\1/' | tee > $OUT
 
 mv "$OUT" "$ML_OUTFILE"
 
diff -r -b -B -u ../core_kernel-113.24.00.orig/src/bigstring_marshal_stubs.c ./src/bigstring_marshal_stubs.c
--- ./src/bigstring_marshal_stubs.c
+++ ./src/bigstring_marshal_stubs.c
@@ -30,12 +30,12 @@
 }
 
 extern CAMLprim void
-caml_output_value_to_malloc(value v, value v_flags, char **buf_p, long *len);
+caml_output_value_to_malloc(value v, value v_flags, char **buf_p, intnat *len);
 
 CAMLprim value bigstring_marshal_stub(value v, value v_flags)
 {
   char *buf;
-  long len;
+  intnat len;
   int alloc_flags = CAML_BA_CHAR | CAML_BA_C_LAYOUT | CAML_BA_MANAGED;
   caml_output_value_to_malloc(v, v_flags, &buf, &len);
   return caml_ba_alloc(alloc_flags, 1, buf, &len);
diff -r -b -B -u ../core_kernel-113.24.00.orig/src/bigstring_stubs.c ./src/bigstring_stubs.c
--- ./src/bigstring_stubs.c
+++ ./src/bigstring_stubs.c
@@ -21,6 +21,13 @@
 #define bswap_16 OSSwapInt16
 #define bswap_32 OSSwapInt32
 #define bswap_64 OSSwapInt64
+#elif __MINGW32__
+static inline uint16_t bswap_16 (uint16_t x)
+{
+    return (x << 8) | (x >> 8);
+}
+#define bswap_32 __builtin_bswap32
+#define bswap_64 __builtin_bswap64
 #elif __GLIBC__
 #include <byteswap.h>
 #include <malloc.h>
@@ -148,7 +155,7 @@
                               value v_pos, value v_len)
 {
   char *start, *r;
-  long ret;
+  intnat ret;
 
   start = get_bstr(v_str, v_pos);
   r = (char*) memchr(start, Int_val(v_needle), Long_val(v_len));
diff -r -b -B -u ../core_kernel-113.24.00.orig/src/core_gc_stubs.c ./src/core_gc_stubs.c
--- ./src/core_gc_stubs.c
+++ ./src/core_gc_stubs.c
@@ -16,9 +16,9 @@
 extern intnat caml_stat_compactions;
 extern intnat caml_stat_heap_chunks;
 
-static long minor_words(void)
+static intnat minor_words(void)
 {
-  return (long) (caml_stat_minor_words +
+  return (intnat) (caml_stat_minor_words +
             (double) Wsize_bsize (caml_young_end - caml_young_ptr));
 }
 
@@ -27,9 +27,9 @@
   return Val_long(minor_words());
 }
 
-static long major_words(void)
+static intnat major_words(void)
 {
-  return (long) (caml_stat_major_words + (double) caml_allocated_words);
+  return (intnat) (caml_stat_major_words + (double) caml_allocated_words);
 }
 
 CAMLprim value core_kernel_gc_major_words(value unit __attribute__((unused)))
@@ -39,7 +39,7 @@
 
 CAMLprim value core_kernel_gc_promoted_words(value unit __attribute__((unused)))
 {
-  return Val_long((long) caml_stat_promoted_words);
+  return Val_long((intnat) caml_stat_promoted_words);
 }
 
 CAMLprim value core_kernel_gc_minor_collections(value unit __attribute__((unused)))
